#!/usr/bin/env bash


# -----------------------------------
# REQUIREMENTS
# -----------------------------------

# Check if required commands are available

check_ydl() {
	if command -v youtube-dl &> /dev/null; then
		return 0  # Success
   	else
        	echo "Error: youtube-dl is not installed. Please install it before running this script."
        	return 1  # Failure
    	fi
}

check_ytdl() {
    	if command -v yt-dlp &> /dev/null; then
        	return 0  # Success
    	else
        	echo "Error: yt-dlp is not installed. Please install it before running this script."
        	return 1  # Failure
    fi
}

check_ffmpeg() {
    	if command -v ffmpeg &> /dev/null; then
        	return 0  # Success
    	else
        	echo "Error: ffmpeg is not installed. Please install it before running this script."
        	return 1  # Failure
    	fi
}

check_wget() {
    	if command -v wget &> /dev/null; then
        	return 0  # Success
    	else
        	echo "Error: wget is not installed. Please install it before running this script."
        	return 1  # Failure
    fi
}

# -----------------------------------
# ABORT
# -----------------------------------

prompt() {
	local prompt="$1"
    	local variable="$2"
    	local default_value="$3"

    	while true; do
        	printf "$prompt"

        	# Set the default value if user presses Enter
        	read -r "$variable"
        	[ -z "${!variable}" ] && eval "$variable=\"$default_value\""

        	# Check if the user wants to abort
        	if [ "${!variable}" == "abort" ]; then
            		sleep 1
            		echo "Abort..."
            		# Add exit actions here if needed
            		show_menu_0
        	fi

        	# Break the loop if input is not empty
        	[ -n "${!variable}" ] && break
    	done
}



# -----------------------------------
# PAUSE & GOODBYE
# -----------------------------------

# Function to pause and wait for user input
pause() {
	echo
	read -rp "Press ENTER to continue..." fackEnterKey
}

# Function to display goodbye message and exit
goodbye() {
	echo -e "${RESET}"
	clear
	exit
}
