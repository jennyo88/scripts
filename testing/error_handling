# -----------------------------------
# REQUIREMENTS
# -----------------------------------
# Check if required commands are available

check_ydl() {
    if command -v youtube-dl &> /dev/null; then
        return 0 # Success
    else
        whiptail --title "Error" --msgbox "youtube-dl is not installed. Please install it before running this script." 8 45
        return 1 # Failure
    fi
}

check_ytdl() {
    if command -v yt-dlp &> /dev/null; then
        return 0 # Success
    else
        whiptail --title "Error" --msgbox "yt-dlp is not installed. Please install yt-dlp (the maintained fork of youtube-dl) before running this script." 8 45
        return 1 # Failure
    fi
}

check_ffmpeg() {
    if command -v ffmpeg &> /dev/null; then
        return 0 # Success
    else
        whiptail --title "Error" --msgbox "ffmpeg is not installed. Please install ffmpeg before running this script." 8 45
        return 1 # Failure
    fi
}

check_wget() {
    if command -v wget &> /dev/null; then
        return 0 # Success
    else
        whiptail --title "Error" --msgbox "wget is not installed. Please install wget before running this script." 8 45
        return 1 # Failure
    fi
}

check_tmux() {
    if command -v tmux &> /dev/null; then
        return 0 # Success
    else
        whiptail --title "Error" --msgbox "tmux is not installed. Please install tmux before running this script." 8 45
        return 1 # Failure
    fi
}

# -----------------------------------
# ABORT
# -----------------------------------

# Function to prompt user input using whiptail
prompt() {
    local prompt_message="$1"
    local variable="$2"
    local default_value="$3"

    # Use whiptail for input
    result=$(whiptail --title "Input" --inputbox "$prompt_message" 10 60 "$default_value" 3>&1 1>&2 2>&3)

    if [ $? -eq 1 ]; then
        whiptail --title "Error" --msgbox "Operation aborted." 8 45
        exit 1
    fi

    # If user entered "abort", exit the script
    if [ "$result" == "abort" ]; then
        whiptail --title "Error" --msgbox "Abort..." 8 45
        exit 1
    fi

    eval "$variable=\"$result\""
}

# -----------------------------------
# PAUSE & GOODBYE
# -----------------------------------

# Function to pause and wait for user input
pause() {
    whiptail --title "Pause" --msgbox "Press OK to continue..." 8 45
}

# Function to display a goodbye message and exit
goodbye() {
    whiptail --title "Goodbye" --msgbox "Goodbye! Exiting..." 8 45
    clear
    exit
}
