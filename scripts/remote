#!/usr/bin/env bash

# Function to display available script paths
show_available_paths() {
    echo "Available script paths:"
    echo "1. scripts/convert"
    echo "2. scripts/remote"
    echo "3. scripts/tmux_ref"
    # Add more paths as needed
}

# Function to display an error message
display_error() {
    echo "Error: $1"
}

# Function to get script path based on user's numeric choice
get_script_path() {
    case "$1" in
        1) echo "scripts/convert" ;;
        2) echo "scripts/remote" ;;
        3) echo "scripts/tmux_ref" ;;
        # Add more cases as needed
        *) echo "Invalid choice" ;;
    esac
}

# Prompt the user for GitHub username
printf "Enter GitHub username (default: jennyo88): "
read -r USERNAME
USERNAME=${USERNAME:-jennyo88}

# Prompt the user for repository name
printf "Enter repository name (default: scripts): "
read -r REPOSITORY
REPOSITORY=${REPOSITORY:-scripts}

# Prompt the user for branch name
printf "Enter branch name (default: main): "
read -r BRANCH
BRANCH=${BRANCH:-main}

# Prompt the user to choose from the list of available paths
show_available_paths
printf "Choose a script by entering its number (0 to exit): "
read -r CHOICE

# Allow the user to exit by entering '0'
if [ "$CHOICE" == "0" ]; then
    echo "Exiting the script."
    exit 0
fi

# Get the script path based on the user's numeric choice
SCRIPT_PATH=$(get_script_path "$CHOICE")

# Use the provided script path or the default value
SCRIPT_PATH=${SCRIPT_PATH:-scripts/convert}

# Construct the URL based on user input
REMOTE_SCRIPT_URL="https://raw.githubusercontent.com/$USERNAME/$REPOSITORY/$BRANCH/$SCRIPT_PATH"

# Download and execute the remote script using bash -c
if bash -c "$(curl -fsSL $REMOTE_SCRIPT_URL)"; then
    echo "Script execution successful."
else
    display_error "Failed to execute the remote script."
fi
