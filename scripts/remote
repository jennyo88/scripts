#!/usr/bin/env bash

# ANSI color codes
RED='\033[1;31m'
GREEN='\033[1;32m'
RESET='\033[0m'

# Function to display available script paths
show_available_paths() {
    echo "Available script paths:"
    echo -e "${GREEN}1. scripts/convert${RESET}"
    echo " - - - (converting files)"
    echo -e "${GREEN}2. scripts/convert_remote${RESET}"
    echo " - - - (uses yt-dlp instead of youtube-dl)"
    echo -e "${GREEN}3. scripts/template_remote${RESET}"
    echo " - - - (template to execute a script from github)"
    echo -e "${GREEN}4. scripts/tmux_ref${RESET}"
    echo " - - - (tmux reference)"
    echo -e "${GREEN}5. scripts/test${RESET}"
    echo " - - - (payroll test script)"
    # Add more paths as needed
}

# Function to display an error message
display_error() {
    echo "Error: $1"
}

# Prompt the user for GitHub username
printf "Enter GitHub username (default: jennyo88): "
read -r USERNAME
USERNAME=${USERNAME:-jennyo88}

# Prompt the user for repository name
printf "Enter repository name (default: scripts): "
read -r REPOSITORY
REPOSITORY=${REPOSITORY:-scripts}

# Prompt the user for branch name
printf "Enter branch name (default: main): "
read -r BRANCH
BRANCH=${BRANCH:-main}

# Prompt the user for script path or show available paths
printf "Enter script path (default: scripts/convert) or type 'list' to show available paths (0 to exit): "
read -r SCRIPT_PATH

# Allow the user to exit by entering '0'
if [ "$SCRIPT_PATH" == "0" ]; then
    echo "Exiting the script."
    exit 0
fi

# Validate if the provided script path is a valid choice
if [ "$SCRIPT_PATH" == "list" ]; then
    show_available_paths
    printf "Enter script path: "
    read -r SCRIPT_PATH
fi

# Use the provided script path or the default value
SCRIPT_PATH=${SCRIPT_PATH:-scripts/convert}

# Construct the URL based on user input
REMOTE_SCRIPT_URL="https://raw.githubusercontent.com/$USERNAME/$REPOSITORY/$BRANCH/$SCRIPT_PATH"

# Download and execute the remote script using bash -c
if curl -fsSL "$REMOTE_SCRIPT_URL" | bash; then
    echo "Script execution successful."
else
    display_error "Failed to execute the remote script."
fi
