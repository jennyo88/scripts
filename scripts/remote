#!/usr/bin/env bash

# Script Name: remote
# Description: Download and execute a remote script from GitHub.
# Author: Your Name
# Date: February 23, 2024
# Version: 1.9

# Usage: ./remote
# Note: This script prompts the user for GitHub username, repository name, branch name, and script path.
# It constructs a URL based on the user's input and attempts to download and execute a remote script (Bash or Python) from GitHub.

# Functions:

# Function to display available script paths
show_available_paths() {
    echo "Available script paths:"
    echo "1. scripts/convert        - Converting files"
    echo "2. scripts/convert_remote - Uses yt-dlp instead of youtube-dl"
    echo "3. scripts/template_remote - Template to execute a script from GitHub"
    echo "4. scripts/tmux_ref       - Tmux reference"
    echo "5. scripts/test           - Payroll test script"
    # Add more paths as needed
}

# Function to display an error message
display_error() {
    echo "Error: $1"
}

# Function to get the shebang line from a script
get_shebang() {
    local script_content=$1
    local shebang=$(echo "$script_content" | sed -n '1s|^#!/usr/bin/env \?\(bash\|python3\)$|\1|p')

    if [ -n "$shebang" ]; then
        echo "$shebang"
    else
        echo ""
    fi
}

# Main Script:

# Prompt the user for GitHub username
printf "Enter GitHub username (default: jennyo88): "
read -r USERNAME
USERNAME=${USERNAME:-jennyo88}

# Prompt the user for repository name
printf "Enter repository name (default: scripts): "
read -r REPOSITORY
REPOSITORY=${REPOSITORY:-scripts}

# Prompt the user for branch name
printf "Enter branch name (default: main): "
read -r BRANCH
BRANCH=${BRANCH:-main}

# Prompt the user for script path or show available paths
printf "Enter script path (default: scripts/convert) or type 'list' to show available paths: "
read -r SCRIPT_PATH

# Validate if the provided script path is a valid choice
if [ "$SCRIPT_PATH" == "list" ]; then
    show_available_paths
    printf "Enter script path: "
    read -r SCRIPT_PATH
fi

# Use the provided script path or the default value
SCRIPT_PATH=${SCRIPT_PATH:-scripts/convert}

# Construct the URL based on user input
REMOTE_SCRIPT_URL="https://raw.githubusercontent.com/$USERNAME/$REPOSITORY/$BRANCH/$SCRIPT_PATH"

# Download the remote script using curl
SCRIPT_CONTENTS=$(curl -fsSL $REMOTE_SCRIPT_URL)

# Get the shebang line from the script
SHEBANG=$(get_shebang "$SCRIPT_CONTENTS")

# Debug: Print the shebang and script contents
echo "Shebang: $SHEBANG"
echo "Script Contents: $SCRIPT_CONTENTS"

# Execute the script based on its shebang
case $SHEBANG in
    "bash" | "python3")
        if eval "$SHEBANG -c \"$SCRIPT_CONTENTS\""; then
            echo "Script execution successful."
        else
            display_error "Failed to execute the remote script."
        fi
        ;;
    *)
        display_error "Unsupported shebang or missing shebang in the remote script."
        ;;
esac
