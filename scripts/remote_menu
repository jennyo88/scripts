u#!/usr/bin/env bash


# Function to download and execute a Bash script
execute_bash_script() {
    printf "Enter the URL of the Bash script: " 
    read -r REMOTE_SCRIPT_URL

# Download and execute the remote script using bash -c
    if bash -c "$(curl -fsSL "$REMOTE_SCRIPT_URL")"; then
        echo "Script execution successful."
    else
        display_error "Failed to execute the remote script."
    fi
}

# Function to execute a remote Python script
execute_remote_python_script() {
    printf "Enter the GitHub URL of the script: "
    read -r GITHUB_URL

    # Download the remote script content
    REMOTE_SCRIPT_CONTENT=$(curl -fsSL "$GITHUB_URL")

    # Function to install Python dependencies
    install_dependencies() {
        if command -v pip3 &> /dev/null; then
            pip3 install --upgrade -r requirements.txt
        else
            display_error "pip3 is not installed. Please install pip3 and try again."
            exit 1
        fi
    }

    # Save the remote script content to a file
    echo "$REMOTE_SCRIPT_CONTENT" > remote_script.py

    # Check if there is a requirements.txt file and install dependencies
    if grep -q "requirements.txt" remote_script.py; then
        install_dependencies
    fi

    # Execute the saved script using the Python interpreter locally
    if python3 remote_script.py; then
        echo "Script execution successful."
    else
        display_error "Failed to execute the remote script."
    fi
}


# Function to execute a Python script
execute_python_script() {
    local python_script_url="https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/tes_py"
    
    echo "Executing Python script from: $python_script_url"
    
    if output=$(bash -c "$(curl -fsSL $python_script_url)" 2>&1); then
        echo "Script execution successful."
    else
        echo "Script execution failed. Error message: $output"
    fi
}

# Function to display and handle the jennyo88 scripts menu
jennyo88_scripts_menu() {
    clear
    echo "================ JENNYO88 SCRIPTS MENU ================"
    echo "Press Ctrl+C to go back to the main menu."
    echo ""
    echo " 1. scripts/convert        - Converting files"
    echo " 2. scripts/convert_remote - Uses yt-dlp instead of youtube-dl"
    echo " 3. scripts/template_remote - Open template to execute a script from GitHub"
    echo " 4. scripts/tmux_ref       - Tmux reference"
    echo " 5. scripts/test           - Payroll test script"
    echo " 6. other"
    echo ""
    echo " 0. Go back to Main Menu"
    echo "======================================================="

    read -p "Enter your choice (0-6): " choice

    # Validate that the input is a number between 0 and 6
    if [[ ! $choice =~ ^[0-6]$ ]]; then
        echo "Invalid choice. Please enter a number between 0 and 6."
        jennyo88_scripts_menu
    fi

    case $choice in
        1) bash -c "$(curl -fsSL https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/convert)" ;;
        2) bash -c "$(curl -fsSL https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/convert_remote)" ;;
        3) open "https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/template_remote" ;;
        4) bash -c "$(curl -fsSL https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/tmux_ref)" ;;
        5) bash -c "$(curl -fsSL https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/test)" ;;
        6) execute_bash_script ;;
        0) main_menu ;;
    esac
}

# Function to display and handle the other scripts menu
other_scripts_menu() {
    clear
    echo "================ OTHER SCRIPTS MENU ================"
    echo "Press Ctrl+C to go back to the main menu."
    echo ""
    echo " 1. Execute Another Bash Script"
    echo " 2. Execute Python Script"
    echo " 3. Execute Remote Script"
    echo ""
    echo " 0. Go back to Main Menu"
    echo "======================================================="

    read -p "Enter your choice (0-3): " choice

    if [[ ! $choice =~ ^[0-3]$ ]]; then
        echo "Invalid choice. Please enter a number between 0 and 3."
        other_scripts_menu
    fi

    case $choice in
        1) execute_bash_script ;;
        2) execute_python_script ;;
        3) execute_remote_python_script ;;
        0) main_menu ;;
    esac
}

# Function to display and handle the main menu
main_menu() {
    clear
    echo "==================== MAIN MENU ===================="
    echo "Press Ctrl+C to exit at any time."
    echo ""
    echo " 1. Execute jennyo88 scripts"
    echo " 2. Execute scripts in other repositories"
    echo ""
    echo " 0. Exit"
    echo "==================================================="

    read -p "Enter your choice (0-2): " choice

    if [[ ! $choice =~ ^[0-2]$ ]]; then
        echo "Invalid choice. Please enter a number between 0 and 2."
        main_menu
    fi

    case $choice in
        1) jennyo88_scripts_menu ;;
        2) other_scripts_menu ;;
        0) echo "Exiting..."; exit 0 ;;
    esac
}

# Start with the main menu
main_menu
