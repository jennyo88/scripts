#!/usr/bin/env bash

# Function to execute a Bash script from a remote URL
execute_remote_bash_script() {
    local script_url=$1
    echo "Executing script: $script_url"

    # Add this line to print the command being executed
    echo "Command to execute: bash -c \"\$(curl -fsSL $script_url)\""

    if output=$(bash -c "$(curl -fsSL $script_url)" 2>&1); then
        echo "Script execution successful."
    else
        echo "Script execution failed. Error message: $output"
    fi
}

# Function to download and execute a Bash script
execute_bash_script() {
    read -p "Enter the URL of the Bash script: " bash_script_url
    echo "Downloading and executing Bash script from: $bash_script_url"

    # Add this line to print the command being executed
    echo "Command to execute: bash -c \"\$(curl -fsSL $bash_script_url)\""

    if output=$(bash -c "$(curl -fsSL $bash_script_url)" 2>&1); then
        echo "Script execution successful."
    else
        echo "Script execution failed. Error message: $output"
    fi
}

# Function to execute a Python script
execute_python_script() {
    local python_script_url="https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/tes_py"
    
    echo "Executing Python script from: $python_script_url"
    
    # Add this line to print the command being executed
    echo "Command to execute: bash -c \"\$(curl -fsSL $python_script_url)\""
    
    if output=$(bash -c "$(curl -fsSL $python_script_url)" 2>&1); then
        echo "Script execution successful."
    else
        echo "Script execution failed. Error message: $output"
    fi
}

# Function to display and handle the jennyo88 scripts menu
jennyo88_scripts_menu() {
    clear
    echo "================ JENNYO88 SCRIPTS MENU ================"
    echo "Press Ctrl+C to go back to the main menu."
    echo ""
    echo " 1. scripts/convert        - Converting files"
    echo " 2. scripts/convert_remote - Uses yt-dlp instead of youtube-dl"
    echo " 3. scripts/template_remote - Template to execute a script from GitHub"
    echo " 4. scripts/tmux_ref       - Tmux reference"
    echo " 5. scripts/test           - Payroll test script"
    echo " 6. other"
    echo ""
    echo " 0. Go back to Main Menu"
    echo "======================================================="

    read -p "Enter your choice (0-6): " choice

    if [[ ! $choice =~ ^[0-6]$ ]]; then
        echo "Invalid choice. Please enter a number between 0 and 6."
        jennyo88_scripts_menu
    fi

    case $choice in
        1) execute_remote_bash_script "https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/convert" ;;
        2) execute_remote_bash_script "https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/convert_remote" ;;
        3) open "https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/template_remote" ;;
        4) execute_remote_bash_script "https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/tmux_ref" ;;
        5) execute_remote_bash_script "https://raw.githubusercontent.com/jennyo88/scripts/main/scripts/test" ;;
        6) execute_bash_script ;;
        0) main_menu ;;
    esac
}

# Function to display and handle the other scripts menu
other_scripts_menu() {
    clear
    echo "================ OTHER SCRIPTS MENU ================"
    echo "Press Ctrl+C to go back to the main menu."
    echo ""
    echo " 1. Execute Other Bash Script"
    echo " 2. Execute Python Script"
    echo ""
    echo " 0. Go back to Main Menu"
    echo "======================================================="

    read -p "Enter your choice (0-2): " choice

    if [[ ! $choice =~ ^[0-2]$ ]]; then
        echo "Invalid choice. Please enter a number between 0 and 2."
        other_scripts_menu
    fi

    case $choice in
        1) execute_bash_script ;;
        2) execute_python_script ;;
        0) main_menu ;;
    esac
}

# Function to display and handle the main menu
main_menu() {
    clear
    echo "==================== MAIN MENU ===================="
    echo "Press Ctrl+C to exit at any time."
    echo ""
    echo " 1. Jennyo88 Scripts Menu"
    echo " 2. Other Scripts Menu"
    echo ""
    echo " 0. Exit"
    echo "==================================================="

    read -p "Enter your choice (0-2): " choice

    if [[ ! $choice =~ ^[0-2]$ ]]; then
        echo "Invalid choice. Please enter a number between 0 and 2."
        main_menu
    fi

    case $choice in
        1) jennyo88_scripts_menu ;;
        2) other_scripts_menu ;;
        0) echo "Exiting..."; exit 0 ;;
    esac
}

# Start with the main menu
main_menu
