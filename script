#!/usr/bin/env bash

### Console menu for converting Files
### A menu driven shell script.
### Just a simple menu, nothing more than a shortcut.

## ----------------------
## Step #1: Define variables
## ----------------------

main_menu="0"

## -------------------------------
# Step #2: User defined functions
## -------------------------------

show_banner_0() {
	clear
    	echo -e "${blu}"
  	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    	echo "                  Converting Files - Service Menu                      	"
    	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~""${end}"
}

show_banner_1() {
  	clear
    	echo -e "${blu}"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    	echo '       /$$    /$$ /$$$$$$ /$$$$$$$  /$$$$$$$$  /$$$$$$   /$$$$$$		' 
    	echo '      | $$   | $$|_  $$_/| $$__  $$| $$_____/ /$$__  $$ /$$__  $$		'
    	echo '      | $$   | $$  | $$  | $$  \ $$| $$      | $$  \ $$| $$  \__/		'
    	echo '      |  $$ / $$/  | $$  | $$  | $$| $$$$$   | $$  | $$|  $$$$$$ 		'
    	echo '       \  $$ $$/   | $$  | $$  | $$| $$__/   | $$  | $$ \____  $$		'
    	echo '        \  $$$/    | $$  | $$  | $$| $$      | $$  | $$ /$$  \ $$		'
    	echo '         \  $/    /$$$$$$| $$$$$$$/| $$$$$$$$|  $$$$$$/|  $$$$$$/		'
    	echo '          \_/    |______/|_______/ |________/ \______/  \______/ 		'
    	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~""${end}"
}

show_banner_2() {
	clear
    	echo -e "${blu}"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    	echo '                    /$$$$$$  /$$   /$$ /$$$$$$$   /$$$$$$ 		'
    	echo '                   /$$__  $$| $$  | $$| $$__  $$ /$$__  $$		'
    	echo '                  | $$  \__/| $$  | $$| $$  \ $$| $$  \__/		'
    	echo '                  |  $$$$$$ | $$  | $$| $$$$$$$ |  $$$$$$ 		'
    	echo '                   \____  $$| $$  | $$| $$__  $$ \____  $$		'
    	echo '                   /$$  \ $$| $$  | $$| $$  \ $$ /$$  \ $$		'
    	echo '                  |  $$$$$$/|  $$$$$$/| $$$$$$$/|  $$$$$$/		'
    	echo '                   \______/  \______/ |_______/  \______/			'                                       
    	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~""${end}"
}

show_banner_3() {
	clear
	echo -e "${blu}"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    	echo '   /$$$$$$  /$$       /$$$$$$$$  /$$$$$$  /$$   /$$       /$$   /$$ /$$$$$$$  '
    	echo '  /$$__  $$| $$      | $$_____/ /$$__  $$| $$$ | $$      | $$  | $$| $$__  $$ '
    	echo ' | $$  \__/| $$      | $$      | $$  \ $$| $$$$| $$      | $$  | $$| $$  \ $$ '
    	echo ' | $$      | $$      | $$$$$   | $$$$$$$$| $$ $$ $$      | $$  | $$| $$$$$$$/ '
    	echo ' | $$      | $$      | $$__/   | $$__  $$| $$  $$$$      | $$  | $$| $$____/  '
    	echo ' | $$    $$| $$      | $$      | $$  | $$| $$\  $$$      | $$  | $$| $$       '
    	echo ' |  $$$$$$/| $$$$$$$$| $$$$$$$$| $$  | $$| $$ \  $$      |  $$$$$$/| $$       '
    	echo '  \______/ |________/|________/|__/  |__/|__/  \__/       \______/ |__/       '
    	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~""${end}"                                                                            
}                                                                           
                                                                            

show_menu_0() {
  	# clear --> moved to show_banner
	echo -e
  	echo " 1) Videos"
  	echo " 2) Subs"
	echo " 3) Clean-up"
  	echo -e "\n 0) Exit Menu \n"

  	echo "${blu}" ; read -rp "Select: " ans ; echo "${end}"
    		case $ans in
      			[vV]|[vV][iI][dD][eE][oO][sS]|"1")
				show_banner_1
        			show_menu_1
        			;;
      			[sS]|[sS][uU][bB][sS]|"2")
        			show_banner_2
        			show_menu_2
        			;;
			[cC]|[cC][lL][eE][aA][nN][uU][pP]|"3")
				show_banner_3
				show_menu_3
				;;
      			## Exit menu
      			[eE]|[eE][xX][iI][tT]|[qQ]|"0")
       				goodbye
        			;;
      			# Hidden options
      			[xX][2][6][5]|[1][1])
        			show_banner_1
        			x265
        			;;
      			[mM][3][uU][8]|[1][2])
        			show_banner_1
       			 	m3u8
        			;;
      			[pP][lL][eE][xX]|[1][3])
        			show_banner_1
        			plex
        			;;
      			[eE][xX][tT][rR][aA][cC][tT]|[2][1])
				show_banner_2
        			extract_srt
        			;;
      			[vV][tT][tT]|[2][2])
				show_banner_2
        			convert_srt
        			;;
			[cC][aA][lL][lL]|[3][3])
				show_banner_3
				c_all
				;;
      			## Anything else is invalid option.
      			*) echo -e "Sorry, that is not an option" && sleep 1
      				;;
    		esac
}

show_menu_1() {
  	echo -e
  	echo "1) Main Menu"
  	echo "2) Convert to x265"
  	echo "3) Download m3u8"
	echo "4) Fix ts for plex"
  	echo "5) Subs Menu"
	echo "6) Cleanup Menu"
  	echo -e "\n 0) Exit Menu \n"

 	echo "${blu}" ; read -rp "Select: " ans ; echo "${end}"
    		case $ans in
      			[mM][aA][iI][nN]|"1")
				show_banner_0
        			show_menu_0
        			;;
      			[xX]|[xX][2][6][5]|"2")
				show_banner_1
        			x265
        			;;
      			[mM]|[mM][3][uU][8]|"3")
				show_banner_1
        			m3u8
        			;;
      			[pP]|[pP][lL][eE][xX]|"4")
				show_banner_1
        			plex
        			;;
			[sS]|[sS][uU][bB][sS]|"5")
				show_banner_2
				show_menu_2
				;;
			[cC]|[cC][lL][eE][aA][nN][uU][pP]|"6")
				show_banner_3
				show_menu_3
				;;
      			## Exit menu
      			[eE]|[eE][xX][iI][tT]|[qQ]|"0")
        			goodbye
        			;;
      			## Anything else is invalid option.
      			*) echo -e "Sorry, that is not an option" && sleep 1
        			;;
    		esac
}

show_menu_2() {
  	echo -e
  	echo "1) Main Menu"
  	echo "2) Extract subs"
  	echo "3) Convert subs"
  	echo "4) Videos Menu"
	echo "5) Cleanup Menu"
  	echo -e "\n 0) Exit Menu \n"

  	echo "${blu}" ; read -rp "Select: " ans ; echo "${end}"
    		case $ans in
      			[mM][aA][iI][nN]|"1")
        			show_banner_0
        			show_menu_0
        			;;
      			[eE]|[eE][xX][tT][rR][aA][cC][tT]|"2")
				show_banner_2
        			extract_srt
        			;;
      			[cC]|[cC][oO][nN][vV][eE][rR][tT]|"3")
				show_banner_2
        			convert_srt
        			;;
      			[vV]|[vV][iI][dD][eE][oO][sS]|"4")
				show_banner_1
        			show_menu_1
        			;;
			[cC]|[cC][lL][eE][aA][nN][uU][pP]|"5")
				show_banner_3
				show_menu_3
				;;
      			[eE]|[eE][xX][iI][tT]|[qQ]|"0")
        			goodbye
        			;;
      			*) echo -e "Sorry, that is not an option" && sleep 1
        			;;
    		esac
}

show_menu_3() {
  	echo -e
  	echo "1) Main Menu"
  	echo "2) Clear folder ts"
  	echo "3) Clear folder mkv"
	echo "4) Clear all"
	echo "5) Videos Menu"
	echo "6) Subs Menu"
  	echo -e "\n 0) Exit Menu \n"

  	echo "${blu}" ; read -rp "Select: " ans ; echo "${end}"
    		case $ans in
      			[mM][aA][iI][nN]|"1")
        			show_banner_0
        			show_menu_0
        			;;
      			[c][tT][sS]|"2")
				show_banner_3
        			c_ts
        			;;
      			[c][mM][kK][vV]|"3")
				show_banner_3
        			c_mkv
        			;;
			[cC][aA][lL][lL]|"4")
				show_banner_3
				c_all
				;;
      			[vV]|[vV][iI][dD][eE][oO][sS]|"5")
				show_banner_1
        			show_menu_1
        			;;
			[sS]|[sS][uU][bB][sS]|"6")
				show_banner_2
				show_menu_2
				;;
      			[eE]|[eE][xX][iI][tT]|[qQ]|"0")
        			goodbye
        			;;
      			*) echo -e "Sorry, that is not an option" && sleep 1
        			;;
    		esac
}


pause() {
  	echo ; read -rp "Press ENTER to continue..." fackEnterKey
}

goodbye() {
  	echo -e "${end}"
  	clear ; exit
}

load_colors() {
  	blu=$'\e[38;5;39m'
  	orn=$'\e[38;5;208m'
  	red=$'\e[1;31m'
  	end=$'\e[0m'
} ; load_colors # Only loaded once

# ----------------------------------
# Step #3: Formulas
# ----------------------------------

x265() {
  	echo "${blu}""                           MKV or MP4 x265 Script               "
  	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"

	printf "Source extension? (mkv, mp4, or avi) : "
	read srcExt

	printf "Destination extension? (mkv or mp4) : "
	read destExt

	printf "Source directory? : "
	read srcDir

	printf "Destination directory? : "
	read destDir

	printf "Options? (in quotes) : "
	read opts


	for filename in "$srcDir"/*.$srcExt;
	do
    		basePath=${filename%.*}
		baseName=${basePath##*/}

		ffmpeg -i $filename -c:v libx265 -c:a copy -threads 3 $opts "$destDir"/"$baseName"."$destExt"
	done
  	echo -e "Conversion from {srcExt} to {destExt} complete!"

}

m3u8() {
  	echo "${blu}""                            M3U8 to TS Script                   "
  	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
 	echo -e "${end}"

	printf "Source extension? : "
	read srcExt

	printf "Destination extension? : "
	read destExt

	printf "Destination directory? : "
	read destDir

	printf "Source web-address? : "
	read srcAdd

	printf "Movie name? (include periods between words) : "
	read baseName

	printf "Movie release year? : "
	read baseYear


	for file in download;
	do
		dirName="${baseName} (${baseYear})"
		newname=`echo "$dirName" | tr '.' ' ' | sed 's/\(.*\) \([^ ]*[aA-zZ][aA-zZ]*$\)/\1.\2/g' `

    		mkdir "$dirName"
		mv "$dirName" "$newname"
		mv "$newname" ./DONE/

		ffmpeg -i $srcAdd -bsf:a aac_adtstoasc -c:v copy -c:a aac -map 0 -crf 50 "$destDir"/"$baseName"."$baseYear".720p.WEBRip.x265-TCM."$destExt"
	done

  	echo -e "Conversion from {srcExt} to {destExt} complete!"
}

plex() {
  	echo "${blu}""                           Ready for Plex Script                "
  	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"

  	printf "Source extension? : "
  	read srcExt

  	printf "Destination extension? : "
  	read destExt

  	printf "Source directory? : "
  	read srcDir

  	printf "Destination directory? : "
  	read destDir

  	printf "Movie language? (two letter code) : "
  	read srcLan


  	for filename in "$srcDir"/*.$srcExt; do

    		basePath=${filename%.*}
    		baseName=${basePath##*/}

    		ffmpeg -i $filename -map 0 -metadata:s:a:0 language=${srcLan} -c copy "$destDir"/"$baseName"."$destExt"

  	done
  	echo "Conversion from ${srcExt} to ${destExt} complete!"
}

extract_srt() {
  	echo "${blu}""                             Extract SRT script                   "
  	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"
	
	printf "Source extension? : "
	read srcExt

	printf "Destination extension? : "
	read destExt

  	printf "Source directory? : "
  	read srcDir

  	printf "Destination directory? : "
  	read destDir

  	for filename in "$srcDir"/*.$srcExt; do

  		basePath=${filename%.*}
    		baseName=${basePath##*/}

  		ffmpeg -f lavfi -i "movie="$filename"[out0+subcc]" -map s "$destDir"/"$baseName".en."$destExt"

  	done
  	echo "Conversion from ${srcExt} to ${destExt} complete!"

}

convert_srt() {
  	echo "${blu}""                             Convert SRT script                  "
 	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"

  	printf "Source directory? : "
  	read srcDir

  	printf "Destination directory? : "
  	read destDir

  	for filename in "$srcDir"/*.vtt; do

  		basePath=${filename%.*}
    		baseName=${basePath##*/}

  		ffmpeg -i $filename "$destDir"/"$baseName".srt

  	done
  	echo "Conversion from vtt to srt complete!"

}

c_ts() {
  	echo "${blu}""                             CLEAN UP script                  "
 	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"
	printf 'Do you want to clear ts folder (y/N)? '
	read ans
	if [ "$ans" != "${ans#[Yy]}" ]; then
		rm -r ./ts/*.ts
		echo "TS folder cleared!" ; sleep 1
	fi
}

c_mkv() {
  	echo "${blu}""                             CLEAN UP script                  "
 	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"
	printf 'Do you want to clear mkv folder (y/N)? '
	read ans
	if [ "$ans" != "${ans#[Yy]}" ]; then
		rm -r ./mkv/*.mkv
		echo "MKV folder cleared!" ; sleep 1
	fi
}

c_all() {
  	echo "${blu}""                             CLEAN UP script                  "
 	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  	echo -e "${end}"
	printf 'Do you want to clear all folders (y/N)? '
	read ans
	if [ "$ans" != "${ans#[Yy]}" ]; then
 		rm -r ./ts/*.ts
		rm -r ./mkv/*.mkv
		echo "All folders cleared!" ; sleep 1
	fi
}

# -----------------------------------
# Step #4: Main logic - infinite loop
# ------------------------------------

while true; do
show_banner_0 && show_menu_${main_menu}
done
