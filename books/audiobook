#!/usr/bin/env bash

# Define the fixed path to the scripts on GitHub
SCRIPT_URL="https://github.com/jennyo88/scripts/raw/main/books/overdrive"

# Function to fetch and run the fixed script from GitHub
fetch_and_run_fixed_script() {
    local script_url=$1
    local audiobook_file=$2

    # Fetch the fixed script
    wget -q -O "overdrive" "$script_url"

    # Check if the script was fetched successfully
    if [ $? -eq 0 ]; then
        echo "Running fixed script: overdrive"
        # Run the fetched script with provided audiobook file name as argument
        bash "overdrive" download "$audiobook_file"
        # Remove the fetched script
        rm "overdrive"
    else
        echo "Failed to fetch script: $script_url"
    fi
}

# List all files with .odm extension
echo "List of audiobook files (.odm) in the current directory:"
audiobook_files=($(ls *.odm))
for ((i=0; i<${#audiobook_files[@]}; i++)); do
    echo "$i. ${audiobook_files[$i]}"
done

# Prompt user to choose the audiobook file number
echo ""
read -p "Enter the number corresponding to the audiobook file: " selected_index

# Validate user input
if [[ $selected_index =~ ^[0-9]+$ && $selected_index -ge 0 && $selected_index -lt ${#audiobook_files[@]} ]]; then
    audiobook_file="${audiobook_files[$selected_index]}"
    echo "Selected audiobook file: $audiobook_file"

    # Run the fixed script with the provided audiobook file name
    fetch_and_run_fixed_script "$SCRIPT_URL" "$audiobook_file"

    # List directories in the current directory with numbers
    echo "List of directories in the current directory:"
    directories=($(ls -d */))
    for ((i=0; i<${#directories[@]}; i++)); do
        echo "$i. ${directories[$i]}"
    done
    
    # Prompt user to choose the directory number
    read -p "Enter the number corresponding to the folder created by overdrive: " selected_index
    
    # Validate user input
    if [[ $selected_index =~ ^[0-9]+$ && $selected_index -ge 0 && $selected_index -lt ${#directories[@]} ]]; then
        old_folder_name="${directories[$selected_index]}"
        echo "Selected folder: $old_folder_name"
    
        # Prompt user to enter the new folder name
        read -p "Enter the new folder name (including any spaces): " new_folder_name
    
        # Rename the folder to the new folder name
        mv "$old_folder_name" "$new_folder_name"
        pybind -d "$new_folder_name"
    else
        echo "Invalid selection. Exiting..."
    fi
else
    echo "Invalid selection. Exiting..."
fi
