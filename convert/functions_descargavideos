display_menu_header_dvideos() {
  echo -e "${MENU_1_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║                 Movies & TV Shows               ║ "
  echo " ║             DESCARGAVIDEOS.TV  SCRIPT           ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"
}

# Prompt user for show details
prompt_for_show_details_dvideos() {
  prompt "\nEnter the show name (include periods between words): " show_name
  prompt "Enter the season number (two digits; default: 01): " season_number "01"
  prompt "Enter video resolution (e.g. 480p, 720p, or 1080p | default: 720p): " show_resolution "720p"
  prompt "Enter the first episode number: " first_episode
  prompt "Enter the last episode number: " last_episode
}

# Prompt user for movie details
prompt_for_movie_details_dvideos() {
  prompt "\nEnter the name of the movie (include periods between words): " movie_name
  prompt "Enter the year of the movie : " movie_year
  prompt "Enter the resolution (e.g., 480p, 720p, 1080p | default: 720p): " movie_resolution "720p"
  prompt "Enter the movie URL: " movie_url
}

# Prompt user for type (TV show or movie)
prompt_for_type_dvideos() {
  if [ "$type" == "tv" ]; then
    # Prompt user for TV show details
    prompt_for_show_details_dvideos
    download_video_and_subtitles_dvideos
  elif [ "$type" == "movie" ]; then
    # Prompt user for movie details
    prompt_for_movie_details_dvideos
    download_movie_dvideos
  else
    # Invalid input
    echo "Invalid type. Please enter 'tv' or 'movie'."
    exit 1
  fi

  pause
  goodbye
}

# Download video and subtitles for TV show
download_video_and_subtitles_dvideos() {
  # Define output folder
  show_folder="${show_name}"
  mkdir -p "$show_folder"

  # Loop through each episode
  for ((episode_number = 10#$first_episode; episode_number <= 10#$last_episode; episode_number++)); do
    episode_number=$(printf "%02d" "$episode_number")
    video_filename="${show_folder}/${show_name}.S${season_number}E${episode_number}.${show_resolution}.WEBRip.x264.mp4"
    subtitle_filename="${show_folder}/${show_name}.S${season_number}E${episode_number}.${show_resolution}.WEBRip.x264.es.srt"

    # Prompt user for episode URL
    prompt "Enter the URL for Season $season_number Episode $episode_number (or leave blank to skip): " episode_url

    if [ -z "$episode_url" ]; then
      printf "Skipping Season $season_number Episode $episode_number.\n"
    else
      # Download video with Spanish language metadata
      ffmpeg -i "$episode_url" -metadata:s:a:0 language=spa -c copy "$video_filename"

      # Prompt user for subtitle URL
      prompt "Enter the URL for subtitles for Season $season_number Episode $episode_number (or leave blank if none): " subtitle_url

      # Download subtitles if URL provided
      if [ -n "$subtitle_url" ]; then
        ffmpeg -i "$subtitle_url" -c:s srt -metadata:s:s:0 language=spa "$subtitle_filename"
      else
        printf "No subtitle URL provided for Season $season_number Episode $episode_number.\n"
      fi
    fi
  done
}

# Download movie
download_movie_dvideos() {
  filename="${movie_name}.${movie_year}.${movie_resolution}.WEBRip.x264.mp4"
  printf "\nDownloading %s...\n" "$filename"
  ffmpeg -i "$movie_url" -metadata:s:a:0 language=spa -c copy "$filename"
}

# Main function
descargavideos() {
  load_colors
  display_menu_header_dvideos

  descargavideos

  pause
  show_menu_1
}
