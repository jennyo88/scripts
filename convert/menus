#!/usr/bin/env bash

# -----------------------------------
# COLORS
# -----------------------------------

load_colors() {
  MAIN_MENU_COLOR=$'\e[38;5;39m'      # Blue color
  MENU_1_COLOR=$'\e[38;5;208m'        # Orange color
  MENU_2_COLOR=$'\e[1;32m'            # Green color (bold)
  MENU_3_COLOR=$'\e[1;36m'            # Cyan color (bold)
  MENU_4_COLOR=$'\e[38;5;165m'        # Purple color
  OK=$'\e[38;5;32m'                   # Green color
  ERROR=$'\e[1;31m'                   # Red color (bold)
  RESET=$'\e[0m'                      # Reset color attributes
}

# -----------------------------------
# BANNERS
# -----------------------------------

# Function to display MAIN menu banner
show_banner_0() {
  clear
  echo "${MAIN_MENU_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║          Converting Files - Service Menu        ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"
}
# Function to display VIDEOS menu banner
show_banner_1() {
  echo "${MENU_1_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║                                                 ║ "
  echo " ║                     VIDEOS                      ║ "
  echo " ║                                                 ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"
}
# Function to display SUBS menu banner
show_banner_2() {
  echo "${MENU_2_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║                                                 ║ "
  echo " ║                      SUBS                       ║ "
  echo " ║                                                 ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"
}
# Function to display CLEAN-UP menu banner
show_banner_3() {
  echo "${MENU_3_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║                                                 ║ "
  echo " ║                    CLEAN-UP                     ║ "
  echo " ║                                                 ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"
}

# Function to display TMUX menu banner
show_banner_4() {
  echo "${MENU_4_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║                                                 ║ "
  echo " ║                     TMUX                        ║ "
  echo " ║                                                 ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"
}

# -----------------------------------
# MENUS
# -----------------------------------

# Function for displaying MAIN menu
show_menu_0() {
  show_banner_0
  echo ""
  echo ""
  echo "    SCRIPTS"
  echo " 1. For videos"
  echo " 2. For subtitles"
  echo " 3. For clean-up"
  echo " 4. For tmux"
  echo ""
  echo ""
  echo " 0. Exit script"
  echo ""

  # Prompting the user to select an option
  echo -e "${MAIN_MENU_COLOR}"
  prompt "Select: " ans
  echo "${RESET}"

  # Handling the user's choice using a case statement
  case $ans in
    [vV]|[vV][iI][dD][eE][oO][sS]|"1")
      show_menu_1
      ;;
    [sS]|[sS][uU][bB][sS]|"2")
      show_menu_2
      ;;
    [cC]|[cC][lL][eE][aA][nN][uU][pP]|"3")
      show_menu_3
      ;;
    [tT]|[tT][mM][uU][xX]|"4")
      show_menu_4
      ;;
    [eE]|[eE][xX][iI][tT]|[qQ]|"0")
    # Exiting script
      goodbye
      ;;
    # Hidden options
    [xX][2][6][5]|[1][6])
      clear
      show_banner_1
      x265
      ;;
    [mM][3][uU][8]|[1][2])
      clear
      show_banner_1
      m3u8
      ;;
    [yY][dD][lL]|[1][3])
      clear
      show_banner_1
      ydl
      ;;
    [tT][uU][bB][iI])
      clear
      show_banner_1
      tubi
      ;;
    [oO][tT][hH][eE][rR]|[1][5])
      clear
      show_banner_1
      ydl_other
      ;;
    [dD][eE][sS][cC][aA][rR][gG][aA])
      clear
      show_banner_1
      descargavideos
      ;;
    [mM][eE][tT][aA][dD][aA][tT][aA]|[1][9])
      clear
      show_banner_1
      metadata
      ;;
    [pP][lL][eE][xX]|[1][7])
      clear
      show_banner_1
      plex
      ;;
    [aA][lL][lL]|[1][8])
      clear
      show_banner_1
      video_sub && sleep 1
      c_all
      ;;
    [eE][xX][tT][rR][aA][cC][tT]|[2][2])
      clear
      show_banner_2
      extract_srt
      ;;
    [vV][tT][tT]|[2][3])
      clear
      show_banner_2
      convert_srt
      ;;
    [cC][aA][lL][lL]|[3][4])
      clear
      show_banner_3
      c_all
      ;;
    # Handling invalid options
    *)
      echo -e "${ERROR}" "Invalid option. Please enter a valid option." "${RESET}"
      sleep 1
      show_menu_0
      ;;
  esac
}

# Function for displaying VIDEOS menu
show_menu_1() {
  show_banner_0
  show_banner_1
  echo ""
  echo "  1. Go back to MAIN menu"
  echo ""
  echo "    DOWNLOAD"
  echo "  2. Download m3u8 playlist"
  echo "  3. Download from YOUTUBE"
  echo "  4. Download from OTHER"
  echo "  5. Download from tubi"
  echo "  6. Download using yt-dlp"
  echo "  7. Download from descargavideos"
  echo ""
  echo "    CONVERT"
  echo "  8. Convert video to x265"
  echo "  9. Convert ONLY video"
  echo " 10. Convert video & subtitles"
  echo " 11. Encode metadata"
  echo ""
  echo " 12. Go to SUBS menu"
  echo " 13. Go to CLEAN-UP menu"
  echo " 14. Go to TMUX menu"
  echo ""
  echo ""
  echo "  0. Exit script"
  echo ""

  # Prompting the user to select an option
  echo -e "${MAIN_MENU_COLOR}"
  prompt "Select: " ans
  echo "${RESET}"

  # Handling the user's choice using a case statement
  case $ans in
    [mM][aA][iI][nN]|"1")
      clear
      show_banner_0
      show_menu_0
      ;;
    [mM]|[mM][3][uU][8]|[dD][2]|"2")
      clear
      show_banner_1
      m3u8
      ;;
    [yY][dD][lL]|[dD][3]|"3")
      clear
      show_banner_1
      ydl
      ;;
    [oO][tT][hH][eE][rR]|[dD][4]|"4")
      clear
      show_banner_1
      ydl_other
      ;;
    [tT][uU][bB][iI]|[dD][5]|"5")
      clear
      show_banner_1
      tubi
      ;;
    [yY][tT]|[dD][6]|"6")
      clear
      show_banner_1
      ytdl
      ;;
    [dD][eE][sS][cC][aA][rR][gG][aA]|[dD][7]|"7")
      clear
      show_banner_1
      descargavideos
      ;;
    [xX]|[xX][2][6][5]|[cC][8]|"8")
      clear
      show_banner_1
      x265
      ;;
    [vV]|[vI][iI][vV][eE][oO]|[cC][9]|"9")
      clear
      show_banner_0
      plex
      c_ts
      ;;
    [aA]|[aA][lL][lL]|[cC][10]|"10")
      clear
      show_banner_0
      video_sub && sleep 1
      c_ts
      c_mkv
      ;;
    [lL]|[mM][eE][tT][aA][dD][aA][tT][aA]|[cC][11]|"11")
      clear
      show_banner_1
      metadata
      ;;
    [sS]|[sS][uU][bB][sS]|"12")
      show_banner_2
      show_menu_2
      ;;
    [cC]|[cC][lL][eE][aA][nN][uU][pP]|"13")
      show_banner_3
      show_menu_3
      ;;
    [tT]|[tT][mM][uU][xX]|"14")
      show_banner_4
      show_menu_4
      ;;
    [eE]|[eE][xX][iI][Tt]|"0")
      # Exiting the menu
      goodbye
      ;;
    # Handling invalid options
    *)
      echo -e "${ERROR}" "Invalid option. Please enter a valid option." "${RESET}"
      pause
      show_menu_1
      ;;
  esac
}

# Function for displaying SUBS menu
show_menu_2() {
  show_banner_0
  show_banner_2
  echo ""
  echo ""
  echo " 1. Go back to MAIN menu"
  echo ""
  echo " 2. Extract subtitles"
  echo " 3. Convert subtitles"
  echo ""
  echo " 4. Go to VIDEOS menu"
  echo " 5. Go to CLEAN-UP menu"
  echo " 6. Go to TMUX menu"
  echo ""
  echo ""
  echo " 0. Exit script"
  echo ""

  # Prompting the user to select an option
  echo -e "${MAIN_MENU_COLOR}"
  prompt "Select: " ans
  echo "${RESET}"

  # Handling the user's choice using a case statement
  case $ans in
    [mM][aA][iI][nN]|"1")
      show_banner_0
      show_menu_0
      ;;
    [eE]|[eE][xX][tT][rR][aA][cC][tT]|"2")
      clear
      show_banner_2
      extract_srt
      ;;
    [cC]|[cC][oO][nN][vV][eE][rR][tT]|"3")
      clear
      show_banner_2
      convert_srt
      ;;
    [vV]|[vV][iI][dD][eE][oO][sS]|"4")
      show_banner_1
      show_menu_1
      ;;
    [cC][uU]|[cC][lL][eE][aA][nN][uU][pP]|"5")
      show_banner_3
      show_menu_3
      ;;
    [tT]|[tT][mM][uU][xX]|"6")
      show_banner_4
      show_menu_4
      ;;
    [eE]|[eE][xX][iI][tT]|[qQ]|"0")
      # Exiting the menu
      goodbye
      ;;
    # Handling invalid options
    *)
      echo -e "${ERROR}" "Invalid option. Please enter a valid option." "${RESET}"
      pause
      show_menu_2
      ;;
  esac
}

# Function for displaying CLEAN-UP menu
show_menu_3() {
  show_banner_0
  show_banner_3
  echo ""
  echo ""
  echo " 1. Go back to MAIN menu"
  echo ""
  echo " 2. Clear folder ts"
  echo " 3. Clear folder mkv"
  echo " 4. Clear both folders"
  echo ""
  echo " 5. Go to VIDEOS menu"
  echo " 6. Go to SUBS menu"
  echo " 7. Go to TMUX enu"
  echo ""
  echo ""
  echo " 0. Exit script"
  echo ""

  # Prompting the user to select an option
  echo -e "${MAIN_MENU_COLOR}"
  prompt "Select: " ans
  echo "${RESET}"

  # Handling the user's choice using a case statement
  case $ans in
    [mM][aA][iI][nN]|"1")
      show_banner_0
      show_menu_0
      ;;
    [c][tT][sS]|"2")
      clear
      show_banner_3
      c_ts
      ;;
    [c][mM][kK][vV]|"3")
      clear
      show_banner_3
      c_mkv
      ;;
    [cC][aA][lL][lL]|"4")
      clear
      show_banner_3
      c_all
      ;;
    [vV]|[vV][iI][dD][eE][oO][sS]|"5")
      show_banner_1
      show_menu_1
      ;;
    [sS]|[sS][uU][bB][sS]|"6")
      show_banner_2
      show_menu_2
      ;;
    [tT]|[tT][mM][uU][xX]|"7")
      show_banner_4
      show_menu_4
      ;;
    "0")
      # Exiting the menu
      goodbye
      ;;
    # Handling invalid options
    *)
      echo -e "${ERROR}" "Invalid option. Please enter a valid option." "${RESET}"
      pause
      show_menu_3
      ;;
  esac
}

# Function for displaying TMUX menu
show_menu_4() {
  check_tmux
  show_banner_0
  show_banner_4
  echo ""
  echo ""
  echo " 1. Go back to MAIN menu"
  echo ""
  echo " 2. Create new session"
  echo " 3. Attach to session"
  echo " 4. Kill session"
  echo ""
  echo ""
  echo " 5. Go to VIDEOS menu"
  echo " 6. Go to SUBS menu"
  echo " 7. Go to CLEAN-UP menu"
  echo ""
  echo ""
  echo " 0. Exit script"
  echo ""

  # Prompting the user to select an option
  echo -e "${MAIN_MENU_COLOR}"
  prompt "Select: " ans
  echo "${RESET}"

  # Handling the user's choice using a case statement
  case $ans in
    [mM]|"1")
      show_banner_0
      show_menu_0
      ;;
    [[sS]|"2")
      read -p "Enter session name: " session_name
      tmux new-session -A -s "$session_name"
      ;;
    [aA]|"3")
      echo -e "\nList of sessions: \n"
      tmux list-sessions
      echo ""
      echo -e "${MAIN_MENU_COLOR}"
      read -p "Enter session name to attach: " session_name
      echo "${RESET}"
      tmux attach-session -t "$session_name"
      ;;
    [kK]|"4")
      echo -e "\nList of sessions: \n"
      tmux list-sessions
      echo ""
      echo -e "${MAIN_MENU_COLOR}"
      read -p "Enter session name to kill: " session_name
      echo "${RESET}"
      if tmux has-session -t "$session_name" 2>/dev/null; then
          tmux kill-ses -t "$session_name"
          echo -e "${OK}Session '$session_name' has been killed.${RESET}"
      else
          echo -e "${ERROR}Error: Session '$session_name' does not exist.${RESET}"
      fi
      show_menu_4
      ;;
    [vV]|[vV][iI][dD][eE][oO][sS]|"5")
      show_banner_1
      show_menu_1
      ;;
    [sS]|[sS][uU][bB][sS]|"6")
      show_banner_2
      show_menu_2
      ;;
    [cC]|[cC][lL][eE][aA][nN][uU][pP]|"7")
      show_banner_3
      show_menu_3
      ;;
    [eE]|[eE][xX][iI][tT]|[qQ]|"0")
      # Exiting the menu
      goodbye
      ;;
    # Handling invalid options
    *)
      echo -e "${ERROR}" "Invalid option. Please enter a valid option." "${RESET}"
      pause
      show_menu_4
      ;;
  esac
}
