# -------------------------
# extract_srt / convert_srt
# -------------------------

# Function to extract subtitles from video files and save as SRT
extract_srt() {
  check_ffmpeg
  echo -e "${MENU_2_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║              Extract subtitles SCRIPT           ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"

  # Prompting the user for the source extension (e.g., mp4, mkv)
  prompt "Source extension? : " srcExt

  # Prompting the user for the destination extension (e.g., srt)
  prompt "Destination extension? (default: srt): " destExt
  destExt=${destExt:-srt}

  # Prompting the user for the source directory
  prompt "Source directory? : " srcDir

  # Prompting the user for the destination directory
  prompt "Destination directory? : " destDir
  destDir=${destDir:-srt}

  # Checking if the source directory exists
  if [ ! -d "$srcDir" ]; then
    echo -e "${ERROR}Source directory not found.${RESET}"
    exit 1
  fi

  # Creating the destination directory if it doesn't exist
  mkdir -p "$destDir"

  # Loop through each file in the source directory with the specified source extension
  for filename in "$srcDir"/*.$srcExt; do
    # Extracting the base name and path without the extension
    basePath=${filename%.*}
    baseName=${basePath##*/}

    # Using FFmpeg to extract subtitles and save as SRT in the destination directory
    if ffmpeg -f lavfi -i "movie=$filename[out0+subcc]" -map s "$destDir/$baseName.en.$destExt"; then
      echo "Subtitles extracted and saved for $baseName.$srcExt"
    else
      echo -e "${ERROR}Error extracting subtitles for $baseName.$srcExt${RESET}"
      continue
    fi
  done

  echo -e "Extraction from ${srcExt} to ${destExt} complete!\a"
  pause
  show_menu_2
}

# Function to convert VTT subtitles to SRT format
convert_srt() {
  check_ffmpeg
  echo -e "${MENU_2_COLOR}"
  echo " ╔═════════════════════════════════════════════════╗ "
  echo " ║              Convert Subtitles SCRIPT           ║ "
  echo " ╚═════════════════════════════════════════════════╝ ""${RESET}"

  # Prompting the user for the source directory
  prompt "Source directory? (default: vtt): " srcDir
  srcDir=${srcDir:-vtt}

  # Prompting the user for the destination directory
  prompt "Destination directory? (default: srt): " destDir
  destDir=${destDir:-srt}

  # Checking if the source directory exists
  if [ ! -d "$srcDir" ]; then
    echo -e "${ERROR}Source directory not found.${RESET}"
    exit 1
  fi

  # Creating the destination directory if it doesn't exist
  mkdir -p "$destDir"

  # Loop through each VTT file in the source directory
  for filename in "$srcDir"/*.vtt; do
    # Extracting the base name and path without the extension
    basePath=${filename%.*}
    baseName=${basePath##*/}

    # Using FFmpeg to convert VTT to SRT and save the file in the destination directory
    if ffmpeg -i "$filename" "$destDir/$baseName.srt"; then
      echo "Converted $baseName.vtt to $baseName.srt"
    else
      echo -e "${ERROR}Error converting $baseName.vtt to $baseName.srt${RESET}"
      continue
    fi
  done

  echo -e "Conversion from vtt to srt complete!\a"
  pause
  show_menu_2
}
